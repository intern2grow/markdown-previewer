{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TECHNOPC\\\\markdown\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { marked } from \"marked\";\nimport useLocalStorage from \"./components/useLocalStorage\";\nimport Docs from \"./components/Docs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [code, setCode] = useState(\"## Hello\");\n  const [compiled, setCompiled] = useState('<h2 id=\"hello\">Hello</h2>');\n  const [hide, hidePreview] = useState(true);\n  const [value, setValue] = useLocalStorage(\"myKey\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeContent, setActiveContent] = useState(null);\n\n  const openMD = () => {\n    console.log(0);\n    hidePreview(true);\n  };\n\n  const openPreview = () => {\n    console.log(0);\n    hidePreview(false);\n  };\n\n  const openModal = () => {\n    setActiveContent(null);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    console.log(value);\n    setCode(value);\n    setCompiled(marked.parse(value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openMD,\n          className: \"btn\",\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: openPreview,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: openModal,\n          children: \"Docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Docs, {\n        openModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this), hide ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: compiled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: activeContent || \"\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"qna6bx52O+Zblei3MiBX7WT6IKs=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/TECHNOPC/markdown/markdown-previewer/src/App.js"],"names":["React","useState","marked","useLocalStorage","Docs","App","code","setCode","compiled","setCompiled","hide","hidePreview","value","setValue","isModalOpen","setIsModalOpen","activeContent","setActiveContent","openMD","console","log","openPreview","openModal","closeModal","handleChange","e","target","parse"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { marked } from \"marked\";\nimport useLocalStorage from \"./components/useLocalStorage\";\nimport Docs from \"./components/Docs\";\n\n\nconst App = () => {\n  const [code, setCode] = useState(\"## Hello\");\n  const [compiled, setCompiled] = useState('<h2 id=\"hello\">Hello</h2>');\n  const [hide, hidePreview] = useState(true);\n  const [value, setValue] = useLocalStorage(\"myKey\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeContent, setActiveContent] = useState(null);\n\n  const openMD = () => {\n    console.log(0);\n    hidePreview(true);\n  };\n\n  const openPreview = () => {\n    console.log(0);\n    hidePreview(false);\n  };\n  const openModal = () => {\n    setActiveContent(null);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    console.log(value);\n    setCode(value);\n    setCompiled(marked.parse(value));\n  };\n\n  return (\n    <>\n      <h1>MarkDown Previewer React App</h1>\n      <div className=\"container\">\n        <div className=\"btns\">\n          <button onClick={openMD} className=\"btn\">\n            MarkDown\n          </button>\n          <button className=\"btn\" onClick={openPreview}>Preview</button>\n          <button className=\"btn\" onClick={openModal}>Docs</button>\n        </div>\n         {isModalOpen && <Docs openModal={closeModal} />}\n       \n        {hide ? (\n          <div>\n            <textarea onChange={handleChange} value={code} />\n          </div>\n        ) : (\n          <div>\n            <textarea value={compiled} />\n            <div>\n          <textarea value={activeContent || \"\"} readOnly />\n        </div>\n          </div>\n          \n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}